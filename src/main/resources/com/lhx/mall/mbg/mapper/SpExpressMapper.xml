<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhx.mall.mbg.mapper.SpExpressMapper">
  <resultMap id="BaseResultMap" type="com.lhx.mall.mbg.model.SpExpress">
    <id column="express_id" jdbcType="INTEGER" property="expressId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="express_com" jdbcType="VARCHAR" property="expressCom" />
    <result column="express_nu" jdbcType="VARCHAR" property="expressNu" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    express_id, order_id, express_com, express_nu, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lhx.mall.mbg.model.SpExpressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sp_express
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sp_express
    where express_id = #{expressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sp_express
    where express_id = #{expressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lhx.mall.mbg.model.SpExpressExample">
    delete from sp_express
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lhx.mall.mbg.model.SpExpress">
    insert into sp_express (express_id, order_id, express_com, 
      express_nu, create_time, update_time
      )
    values (#{expressId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{expressCom,jdbcType=VARCHAR}, 
      #{expressNu,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhx.mall.mbg.model.SpExpress">
    insert into sp_express
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expressId != null">
        express_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="expressCom != null">
        express_com,
      </if>
      <if test="expressNu != null">
        express_nu,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expressId != null">
        #{expressId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="expressCom != null">
        #{expressCom,jdbcType=VARCHAR},
      </if>
      <if test="expressNu != null">
        #{expressNu,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lhx.mall.mbg.model.SpExpressExample" resultType="java.lang.Integer">
    select count(*) from sp_express
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sp_express
    <set>
      <if test="record.expressId != null">
        express_id = #{record.expressId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.expressCom != null">
        express_com = #{record.expressCom,jdbcType=VARCHAR},
      </if>
      <if test="record.expressNu != null">
        express_nu = #{record.expressNu,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sp_express
    set express_id = #{record.expressId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      express_com = #{record.expressCom,jdbcType=VARCHAR},
      express_nu = #{record.expressNu,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhx.mall.mbg.model.SpExpress">
    update sp_express
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="expressCom != null">
        express_com = #{expressCom,jdbcType=VARCHAR},
      </if>
      <if test="expressNu != null">
        express_nu = #{expressNu,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
    </set>
    where express_id = #{expressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhx.mall.mbg.model.SpExpress">
    update sp_express
    set order_id = #{orderId,jdbcType=INTEGER},
      express_com = #{expressCom,jdbcType=VARCHAR},
      express_nu = #{expressNu,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where express_id = #{expressId,jdbcType=INTEGER}
  </update>
</mapper>